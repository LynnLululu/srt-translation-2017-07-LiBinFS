1
00:00:00,360 --> 00:00:03,110
我希望每个人理解哈希表背后的主要思想

2
00:00:03,110 --> 00:00:06,660
我们的目标是把关键字映射成桶里的一个数字

3
00:00:06,660 --> 00:00:11,120
对一个特殊的桶使用我们的哈希函数

4
00:00:11,120 --> 00:00:15,410
之后这个桶会包含映射到那个位置的所有关键字

5
00:00:15,410 --> 00:00:18,040
所以现在我们要做的是尝试

6
00:00:18,040 --> 00:00:20,980
写代码来实现它

7
00:00:20,980 --> 00:00:23,460
我们将从我们为上一单元编写的索引开始

8
00:00:23,460 --> 00:00:26,960
但是尝试去弄明白如何使用哈希表实现它

9
00:00:26,960 --> 00:00:30,500
所以第一个问题是 这将如何改变我们的数据结构

10
00:00:30,500 --> 00:00:34,860
这是我们之前的 如果你还记得我们的索引是一个关键字列表

11
00:00:34,860 --> 00:00:39,280
我们有一个条目列表 每个条目是一对

12
00:00:40,860 --> 00:00:46,650
这是一个关键字 而该对的第二个元素是该词出现的网址列表

13
00:00:46,650 --> 00:00:52,580
我们将索引中的每个词作为自己的条目

14
00:00:52,580 --> 00:00:56,760
并具有自己的链接列表

15
00:00:56,760 --> 00:01:00,150
这是我们上次课使用的数据结构

16
00:01:00,150 --> 00:01:03,370
现在我们想改变事情去实现一个哈希表

17
00:01:03,370 --> 00:01:05,700
所以我想让你去思考我们将使用什么数据结构

18
00:01:05,700 --> 00:01:08,770
我们将做一个测验来决定一个好的数据结构

19
00:01:08,770 --> 00:01:11,820
去用来实现哈希表

20
00:01:11,820 --> 00:01:14,950
所以问题是这些数据结构中哪一个最合理

21
00:01:14,950 --> 00:01:18,060
去用来实现哈希表索引 第一个选项是一个列表

22
00:01:18,060 --> 00:01:20,780
所有元素都在列表里

23
00:01:20,780 --> 00:01:22,930
列表里第一个元素是一个单词 

24
00:01:22,930 --> 00:01:26,860
第二个元素是出现该单词的 URL 列表 

25
00:01:26,860 --> 00:01:29,800
第二个选项是列表 其中列表中的每个元素也是一个列表

26
00:01:29,800 --> 00:01:32,300
其中第一个元素是单词 第二个元素是列表的列表

27
00:01:32,300 --> 00:01:35,270
其中该列表中的每个元素又是 URL 列表

28
00:01:35,270 --> 00:01:38,250
第三个选项是一个列表

29
00:01:38,250 --> 00:01:43,600
每个元素也是一个列表 元素列表本身也包含列表

30
00:01:43,600 --> 00:01:48,270
其中元素列表的元素列表

31
00:01:48,270 --> 00:01:51,480
是单词的列表

32
00:01:51,480 --> 00:01:53,390
全部由该单词的所有 URL 组成

33
00:01:54,640 --> 00:01:57,960
因此对于前三个 我们有三个嵌套的列表

34
00:01:57,960 --> 00:02:00,120
对于选项四 我们有一个列表

35
00:02:00,120 --> 00:02:03,440
其中列表中的每个元素是一个列表

36
00:02:03,440 --> 00:02:05,550
在元素列表中 有另一个列表 它是一个单词列表

37
00:02:05,550 --> 00:02:08,930
后面跟着的是一个 URL 列表

38
00:02:08,930 --> 00:02:13,710
对于最后的选项 我们也有三个列表的列表 其中每个元素是一个列表

39
00:02:13,710 --> 00:02:17,670
其中列表的元素是一个列表 词后面跟着一个列表

40
00:02:17,670 --> 00:02:22,550
其中该列表中的每个元素是 URL 列表

41
00:02:22,550 --> 00:02:26,436
那么哪一个是实现哈希表的最好结构呢？
