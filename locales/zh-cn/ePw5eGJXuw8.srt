1
00:00:00,570 --> 00:00:01,910
现在 我们已经使我们的基础搜索

2
00:00:01,910 --> 00:00:03,890
引擎工作 对于本单元的其余部分 我们

3
00:00:03,890 --> 00:00:05,730
要了解更多关于我们实际上如何获取

4
00:00:05,730 --> 00:00:08,500
因特网上的网页 到目前为止 我们一直

5
00:00:08,500 --> 00:00:12,560
使用神奇的 get_page 函数 我们提供

6
00:00:12,560 --> 00:00:16,000
这个函数 它将一个 URL 作为输入

7
00:00:16,000 --> 00:00:19,990
URL 是网络上的一种资源定位器

8
00:00:19,990 --> 00:00:22,360
它 (get_page 函数) 以页面内容作为输出

9
00:00:24,660 --> 00:00:26,595
我可以向你展示 我们用于 get_page 的 Python 代码

10
00:00:26,595 --> 00:00:29,860
这不会真的有很多帮助 关于理解

11
00:00:29,860 --> 00:00:32,130
因特网上发生什么 但我不希望你

12
00:00:32,130 --> 00:00:35,320
认为有什么隐藏在这里 我们做的主要事情

13
00:00:35,320 --> 00:00:39,860
在 get_page 中 是我们返回调用打开 URL 的结果

14
00:00:39,860 --> 00:00:43,090
通过传入 URL 这样打开请求的网页

15
00:00:43,090 --> 00:00:46,030
然后读取页面 并返回输出

16
00:00:46,030 --> 00:00:49,790
字符串格式的页面内容 这是由 Python

17
00:00:49,790 --> 00:00:53,270
库 urllib 提供的 所以我们需要导入该库

18
00:00:53,270 --> 00:00:56,900
这就是发生了什么 其余部分是一个

19
00:00:56,900 --> 00:01:00,280
异常处理程序 所以我们称之为 try 块 我们

20
00:01:00,280 --> 00:01:03,190
将尝试这些东西 他们可能不总是工作 这里就是

21
00:01:03,190 --> 00:01:07,160
我们使用的 try 可能有错误 也许网址

22
00:01:07,160 --> 00:01:09,820
不好 也许我们实际上没有返回一个页面 也许

23
00:01:09,820 --> 00:01:12,844
网络请求超时 并不总是工作 即使它在

24
00:01:12,844 --> 00:01:15,810
该网址上 所以这就是为什么你把它放在一个 try 块

25
00:01:15,810 --> 00:01:19,860
如果某些方面失败了 执行会跳转到 except 块

26
00:01:19,860 --> 00:01:23,700
这被称为异常处理程序 在这种情况下

27
00:01:23,700 --> 00:01:27,720
我们只返回一个空字符串 所以这意味着如果

28
00:01:27,720 --> 00:01:31,070
我们请求一个不能加载的 URL 反而得到

29
00:01:31,070 --> 00:01:33,650
一个错误 它将只返回一个空字符串

30
00:01:33,650 --> 00:01:35,720
在我们的网络爬虫中使用 这是一个很好的

31
00:01:35,720 --> 00:01:38,700
事情 如果我们不这样做 那么网络爬虫

32
00:01:38,700 --> 00:01:41,350
将不得不处理页面不存在的情况

33
00:01:41,350 --> 00:01:45,840
在我们的例子中 我们只得到一个空字符串 因此该网页上没有任何内容 所以

34
00:01:45,840 --> 00:01:47,980
查看 get_page 的实际代码并不能真的

35
00:01:47,980 --> 00:01:50,190
帮助我们了解发生了什么

36
00:01:50,190 --> 00:01:52,840
当我们请求网页的时候 所有实际工作

37
00:01:52,840 --> 00:01:55,360
都隐藏在这个 Python 库函数中 因此

38
00:01:55,360 --> 00:01:57,120
为了更多地了解发生了什么 我们

39
00:01:57,120 --> 00:01:59,550
需要更多地了解因特网的工作原理

