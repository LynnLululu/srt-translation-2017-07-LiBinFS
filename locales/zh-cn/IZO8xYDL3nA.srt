1
00:00:00,000 --> 00:00:02,000
那么我们目前看过的所有例子中

2
00:00:02,000 --> 00:00:05,000
列表中的所有元素都是同样的数据类型

3
00:00:05,000 --> 00:00:07,000
我们有过一个列表所有的元素都是字符串

4
00:00:07,000 --> 00:00:10,000
我们有过一个列表其所有的元素都是数字

5
00:00:10,000 --> 00:00:12,000
然而 列表中并没有限制数据类型

6
00:00:12,000 --> 00:00:14,000
我们可以使所有元素变成任何我们想要的类型

7
00:00:14,000 --> 00:00:16,000
我们可以在一个列表中混合及匹配任何东西

8
00:00:16,000 --> 00:00:20,000
那么这里有一个例子

9
00:00:20,000 --> 00:00:23,000
我们在一个列表中放了一些字符串及一些数字

10
00:00:23,000 --> 00:00:25,000
那完全没问题

11
00:00:25,000 --> 00:00:28,000
更有趣的是我们可以在列表中有列表

12
00:00:28,000 --> 00:00:32,000
现在在“混合”的元素中有一个自己是一个列表

13
00:00:32,000 --> 00:00:34,000
接着我们可以在其内再有一个列表

14
00:00:34,000 --> 00:00:38,000
这里我们已经定义了一个新变量 mixed_up

15
00:00:38,000 --> 00:00:41,000
它包含着一个字符串 一个数字 一个字符串 一个数字

16
00:00:41,000 --> 00:00:43,000
接着是一个列表

17
00:00:43,000 --> 00:00:47,000
第五个元素自己是一个列表包含着

18
00:00:47,000 --> 00:00:50,000
一个数字 一个数字 和另一个列表

19
00:00:50,000 --> 00:00:53,000
这个例子显露出列表的多样性

20
00:00:53,000 --> 00:00:55,000
以至于我们可以在它们中放任何我们想要的东西

21
00:00:55,000 --> 00:00:57,000
它看上去似乎并不太有用

22
00:00:57,000 --> 00:01:00,000
因为我们放在列表中的东西并没有什么结构性

23
00:01:00,000 --> 00:01:03,000
所以让我们试一下另一个例子可能会对 为什么

24
00:01:03,000 --> 00:01:07,000
在列表中能够存在列表是很有用的 有更好的理解

25
00:01:07,000 --> 00:01:11,000
在我们定义变量 beastles 为一个有四个字符串的列表

26
00:01:11,000 --> 00:01:14,000
是甲壳虫乐队的名字

27
00:01:14,000 --> 00:01:17,000
现在我们已经定义了变量 beatles 为多个列表的列表

28
00:01:17,000 --> 00:01:20,000
列表中的元素为列表

29
00:01:20,000 --> 00:01:24,000
包含人名及他的出生日期

30
00:01:24,000 --> 00:01:27,000
我们在我们的列表中的第一个元素是 John

31
00:01:27,000 --> 00:01:29,000
他在1940年出生

32
00:01:29,000 --> 00:01:32,000
让我们看看在 Python 的编译器中其是如何实现的

33
00:01:32,000 --> 00:01:35,000
当我们开始有长的列表时 尤其是像这样的列表中包含列表

34
00:01:35,000 --> 00:01:37,000
它们可能不能在同一行中都写出来

35
00:01:37,000 --> 00:01:39,000
将这些东西分成两行是可以的

36
00:01:39,000 --> 00:01:41,000
但是我们在做这种分割时要小心一点

37
00:01:41,000 --> 00:01:43,000
使其易于 Python 编译器的理解

38
00:01:43,000 --> 00:01:46,000
它们都是一个列表的一部分

39
00:01:46,000 --> 00:01:49,000
你想要分割的地方是在逗号后

40
00:01:49,000 --> 00:01:53,000
然后如果你用一种方式缩进使其清晰易懂

41
00:01:53,000 --> 00:01:55,000
然后你可以看看这个结构 这两行

42
00:01:55,000 --> 00:02:00,000
还是同一个列表的一部分 接着这里的闭方括号

43
00:02:00,000 --> 00:02:02,000
完成这个列表

44
00:02:02,000 --> 00:02:06,000
现在让我们尝试将其显示出来

45
00:02:06,000 --> 00:02:09,000
然后我们看见包含四个元素的列表

46
00:02:09,000 --> 00:02:13,000
每个元素都是一个包含两个元素的列表

47
00:02:13,000 --> 00:02:15,000
我们可以显示其中一个元素

48
00:02:15,000 --> 00:02:17,000
我们会显示在位置3的元素

49
00:02:17,000 --> 00:02:20,000
其实际上是列表的第四个元素

50
00:02:20,000 --> 00:02:22,000
我们看见那个元素是一对

51
00:02:22,000 --> 00:02:24,000
那是一个列表

52
00:02:24,000 --> 00:02:26,000
所以如果我们只是想要从那得到名字 

53
00:02:26,000 --> 00:02:30,000
那么我们需要再次用索引 那么我们可以再一次用索引

54
00:02:30,000 --> 00:02:33,000
来得到列表位置0的元素

55
00:02:33,000 --> 00:02:36,000
然后那会给我们一个名字

56
00:02:36,000 --> 00:02:40,000
如果我们用索引1

57
00:02:40,000 --> 00:02:43,000
我们会得到年份
