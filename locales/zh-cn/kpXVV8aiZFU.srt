1
00:00:00,460 --> 00:00:03,610
答案是“Yes” 这是很好的递归定义

2
00:00:03,610 --> 00:00:06,689
无论 t 和 p 传入什么值

3
00:00:06,689 --> 00:00:09,410
我们最终都会得出一个结果

4
00:00:09,410 --> 00:00:12,717
这是因为每次进行递归调用时

5
00:00:12,717 --> 00:00:15,650
t 传入的值都比上一个值小 1

6
00:00:15,650 --> 00:00:20,730
如果以整数开始的话

7
00:00:20,730 --> 00:00:22,840
我们不断减 1

8
00:00:22,840 --> 00:00:25,540
最终会得出 t = 0 的情况

9
00:00:25,540 --> 00:00:29,210
也就是基本情况 我们可以返回值 1

10
00:00:29,210 --> 00:00:31,450
不用再使用 popularity 函数

11
00:00:31,450 --> 00:00:33,650
所以这是个很好的递归定义

12
00:00:33,650 --> 00:00:38,290
它始终会得出一个结果 可能无法对受欢迎程度进行有意义的定义

13
00:00:38,290 --> 00:00:41,810
但是如果这么定义受欢迎程度的话 这段代码将始终产生结果
