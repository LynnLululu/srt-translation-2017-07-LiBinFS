1
00:00:00,290 --> 00:00:05,420
所以答案是否定的——它不是 关键原因是

2
00:00:05,420 --> 00:00:08,690
没有基本情况 没有基本情况 就不是

3
00:00:08,690 --> 00:00:11,050
递归定义 它是什么 是一个

4
00:00:11,050 --> 00:00:15,610
循环定义 这意味着 它实际上不会

5
00:00:15,610 --> 00:00:19,430
给我们任何答案 因为我们在这里永远不会结束

6
00:00:19,430 --> 00:00:21,870
我们定义 popularity 的唯一方式 无论是

7
00:00:21,870 --> 00:00:25,920
你看到的数学表达式还是 Python 代码

8
00:00:25,920 --> 00:00:29,130
总是包含再次调用 popularity 我们永远不能

9
00:00:29,130 --> 00:00:30,830
到达一个可以停止的点 我们

10
00:00:30,830 --> 00:00:34,000
会持续对不同的人调用 popularity 如果

11
00:00:34,000 --> 00:00:36,800
我们考虑对我们的朋友关系图这样做 那么这就是

12
00:00:36,800 --> 00:00:38,980
将要发生的事 如果我们想知道 Charlie

13
00:00:38,980 --> 00:00:41,570
的人气 那么 我们要查看所有人中

14
00:00:41,570 --> 00:00:44,000
谁是 Charlie 的朋友 因此 这意味着 Diana 的

15
00:00:44,000 --> 00:00:47,070
人气、Edgar 的人气和 Fred 的人气

16
00:00:49,160 --> 00:00:51,310
但是对于它们中的每一个 我们都需要计算人气值

17
00:00:51,310 --> 00:00:55,220
对于 Diana 的人气来说 它

18
00:00:55,220 --> 00:00:58,240
等于 Alice 的人气 所以现在我们在这里

19
00:00:58,240 --> 00:01:00,260
但我们需要继续前进 然后 Alice 的人气

20
00:01:00,260 --> 00:01:03,480
是 Edgar 的人气加上 Bob 的人气

21
00:01:04,650 --> 00:01:07,050
但是我们需要继续前进 我们仍然需要

22
00:01:07,050 --> 00:01:09,780
Edgar 的人气 那么这等于 Fred 的人气

23
00:01:11,090 --> 00:01:14,140
然后我们需要 Bob 的人气 也等于 Fred

24
00:01:14,140 --> 00:01:17,610
的人气 然后我们需要 Fred 的人气

25
00:01:17,610 --> 00:01:22,850
也就是 Charlie 的人气 加上 Bob 的人气

26
00:01:22,850 --> 00:01:24,910
所以这是不行的 对不对？这里的问题是 我们

27
00:01:24,910 --> 00:01:28,650
开始试图找出 Charlie 的人气 我们做完了

28
00:01:28,650 --> 00:01:32,090
所有这些工作 根据后面的链接 而现在 为了

29
00:01:32,090 --> 00:01:34,720
解决这个问题 我们需要知道 Charlie 的人气

30
00:01:34,720 --> 00:01:36,980
但是这正是我们试图解决的问题 所以

31
00:01:36,980 --> 00:01:39,420
这不是一个递归定义 要成为一个好的递归

32
00:01:39,420 --> 00:01:44,040
定义 我们必须以一个更简单版本的问题结束 永远不要

33
00:01:44,040 --> 00:01:47,410
回到我们最开始的问题 我们定义它的这个方式 使得我们

34
00:01:47,410 --> 00:01:48,600
回到了最开始的问题

35
00:01:48,600 --> 00:01:50,720
我们没有取得任何进展 我们永远不会

36
00:01:50,720 --> 00:01:53,370
得到答案 Charlie 会很不高兴

37
00:01:53,370 --> 00:01:55,050
因为我们永远不会知道他是多么的受欢迎

