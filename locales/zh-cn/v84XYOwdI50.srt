1
00:00:00,000 --> 00:00:01,384
欢迎回到单元3

2
00:00:01,384 --> 00:00:04,231
这个单元会介绍 下一个对于网络爬虫的重要思想

3
00:00:04,231 --> 00:00:06,335
也就是结构化数据

4
00:00:06,335 --> 00:00:09,276
在这个单元的最后你会完成创建一个网络爬虫

5
00:00:09,276 --> 00:00:11,341
目前为止我们所看见离结构化数据最近的东西

6
00:00:11,341 --> 00:00:14,381
是在第一单位介绍的字符串数据类型

7
00:00:14,381 --> 00:00:17,164
在第二单元被用在许多函数中

8
00:00:17,164 --> 00:00:19,335
一个字符串是一种结构化数据 那是因为我们

9
00:00:19,335 --> 00:00:21,734
可以把它分解成单个字符

10
00:00:21,734 --> 00:00:23,668
字符串有一序列的字符

11
00:00:23,668 --> 00:00:26,552
并且我们可以操作字符串的子序列

12
00:00:26,552 --> 00:00:29,885
然而 我们可以对字符串做的是有限的 

13
00:00:29,885 --> 00:00:32,818
因为我们可以在字符串中放的只有字符

14
00:00:32,818 --> 00:00:35,650
今天 我们将介绍列表数据类型

15
00:00:35,650 --> 00:00:37,868
列表要比字符串强大很多

16
00:00:37,868 --> 00:00:41,167
对于字符串 所有的元素都必须是字符串

17
00:00:41,167 --> 00:00:44,051
在列表中 元素可以是我们想的任何东西

18
00:00:44,051 --> 00:00:46,236
它们可以是字符 它们可以是字符串

19
00:00:46,236 --> 00:00:49,917
它们可以是数字 它们也可以是其他的列表

20
00:00:49,917 --> 00:00:51,968
让我们看一个例子

21
00:00:51,968 --> 00:00:55,403
当我们创建一个字符串时 我们只是在单引号或者双引号中

22
00:00:55,403 --> 00:00:58,252
放了一连串的字符

23
00:00:58,252 --> 00:01:00,050
这里是字符串的一个例子

24
00:01:00,050 --> 00:01:03,084
然后我们可以用等于将字符串储存在一个变量中

25
00:01:03,084 --> 00:01:07,335
在列表 我们用方括号而不是引号

26
00:01:07,335 --> 00:01:11,452
来定义列表 列表的元素用逗号分开 

27
00:01:11,452 --> 00:01:14,701
接着就像字符串那样 我们可以将我们创建的列表赋给

28
00:01:14,701 --> 00:01:18,751
一个变量 所以我们会将那个列表储存在变量 p

29
00:01:18,751 --> 00:01:21,353
在字符串中 我们可以用方括号

30
00:01:21,353 --> 00:01:24,401
来选择元素 然后当我们索引元素0时

31
00:01:24,401 --> 00:01:29,368
我们会得到字符串的第一个元素 一个字符的序列

32
00:01:29,368 --> 00:01:31,317
也就是字符 “y”

33
00:01:31,317 --> 00:01:35,135
在列表中 我们也可以用方括号来访问元素

34
00:01:35,135 --> 00:01:39,168
如果我们用 p[0]

35
00:01:39,168 --> 00:01:42,367
就会得到 p 的第一个元素

36
00:01:42,367 --> 00:01:45,868
其为包含单个字母 y 的字符串

37
00:01:45,868 --> 00:01:49,467
在字符串中 我们看见我们可以在方括号中用分号

38
00:01:49,467 --> 00:01:52,834
来选择大于一个字符的字符串的子字符串

39
00:01:52,834 --> 00:01:56,853
这里我们选择从位置 2 到位置 4

40
00:01:56,853 --> 00:02:00,401
那会给我们字符串中第三个和第四个字符

41
00:02:00,401 --> 00:02:04,603
其为一个子序列 字符串 "bb"

42
00:02:04,603 --> 00:02:06,502
我们可以对列表做同样的事

43
00:02:06,502 --> 00:02:09,917
我们可以选择从位置2到位置4

44
00:02:09,917 --> 00:02:12,834
但是它会返回一个列表其包含

45
00:02:12,834 --> 00:02:15,168
那些元素 而不是字符串

46
00:02:15,168 --> 00:02:18,402
它会给我们一个包含变量 p 的第三个和第四个元素

47
00:02:18,402 --> 00:02:23,302
的列表 也就是这个列表

48
00:02:23,302 --> 00:02:26,602
建立列表的一般语法是

49
00:02:26,602 --> 00:02:29,668
用一对方括号包含

50
00:02:29,668 --> 00:02:32,285
一个由任意数量的表达式组成的列表

51
00:02:32,285 --> 00:02:35,417
表达式之间被逗号分开

52
00:02:35,417 --> 00:02:39,418
我们可以只用两个括号创建一个列表

53
00:02:39,418 --> 00:02:41,868
一个左括号和一个右括号 接着这会创建一个列表

54
00:02:41,868 --> 00:02:46,002
包含着0个元素 也就是空列表

55
00:02:46,002 --> 00:02:49,052
我们可以创建包含一个元素的列表

56
00:02:49,052 --> 00:02:53,302
就会变成一对方括号和一个元素在里面

57
00:02:53,302 --> 00:02:55,801
这里我们已经创建了包含一个元素的列表

58
00:02:55,801 --> 00:02:58,019
也就是数字3

59
00:02:58,019 --> 00:03:01,169
或者我们可以创建一个列表包含许多元素 就像我们在第一个例子中做的那样

60
00:03:01,169 --> 00:03:05,169
其中我们将所有字符串用逗号分开
