1
00:00:00,000 --> 00:00:04,000
这个问题尤其需要用到递归

2
00:00:04,000 --> 00:00:08,000
这里有个斯特令数递归公式

3
00:00:08,000 --> 00:00:18,000
即 S(n,k) = kS(n-1,k) + S(n-1,k-1)

4
00:00:18,000 --> 00:00:21,000
我们需要思考的是基础条件

5
00:00:21,000 --> 00:00:24,000
没有给出基础条件 何时停止呢？

6
00:00:24,000 --> 00:00:28,000
如果有一些物体 我们想要划分它们

7
00:00:28,000 --> 00:00:32,000
如果群组多于物体数量

8
00:00:32,000 --> 00:00:36,000
那么某些群组将为空 但是不能出现这种情况

9
00:00:36,000 --> 00:00:39,000
也就是如果有更多的群组

10
00:00:39,000 --> 00:00:42,000
群组用 k 表示 对象用 n 表示

11
00:00:42,000 --> 00:00:49,000
如果群组多于对象 我们就返回 0 不能出现这种情况

12
00:00:49,000 --> 00:00:51,000
这是一种情况

13
00:00:51,000 --> 00:00:57,000
再看看我们的公式 我们还需要在其他情况下停止

14
00:00:57,000 --> 00:01:01,000
我们不能一直都返回 0 因为这样的话 我们的和将是 0

15
00:01:01,000 --> 00:01:06,000
如果这两个值相等 会怎样？

16
00:01:06,000 --> 00:01:09,000
如果这两个值相等

17
00:01:09,000 --> 00:01:15,000
如果 n = k 那么将物体分成数量相同的组

18
00:01:15,000 --> 00:01:19,000
有多少种方式？

19
00:01:19,000 --> 00:01:25,000
另一种需要考虑的情况是如果 k 为 1

20
00:01:25,000 --> 00:01:28,000
如果要将物体分成一组 该怎么办？

21
00:01:28,000 --> 00:01:33,000
只有一种方式 所以也返回 1

22
00:01:33,000 --> 00:01:40,000
现在看看代码 我将只编写这两个条件

23
00:01:40,000 --> 00:01:46,000
如果物体数量小于群组数量 那么无法安排物体

24
00:01:46,000 --> 00:01:54,000
如果物体数量等于群组数量 或者只有一个群组

25
00:01:54,000 --> 00:01:57,000
那么只有一种实现方式

26
00:01:57,000 --> 00:02:04,000
如果不是这两种情况 那么就要返回给定的公式

27
00:02:04,000 --> 00:02:06,000
即该递归公式

28
00:02:06,000 --> 00:02:10,000
斯特令数问题就解完了

29
00:02:10,000 --> 00:02:17,000
对于贝尔数 我们需要对 k 等于 1 一直到 n 时的斯特令数求和

30
00:02:17,000 --> 00:02:22,000
我们需要一个变量来存储我们将返回的总和

31
00:02:22,000 --> 00:02:27,000
然后我们需要考虑 k 从 1 到 n 的情况

32
00:02:27,000 --> 00:02:32,000
for k in range(1, n + 1).

33
00:02:32,000 --> 00:02:37,000
后面的 +1 别忘了 因为 range 在第二个输入数字之前停止

34
00:02:37,000 --> 00:02:44,000
然后需要加上 stirling(n, k)

35
00:02:44,000 --> 00:02:47,000
最后需要返回总和