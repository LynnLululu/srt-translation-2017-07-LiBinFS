1
00:00:00,170 --> 00:00:02,120
在探讨对网络搜索结果进行排名的问题之前

2
00:00:02,120 --> 00:00:05,270
我想谈一个更有趣的递归定义

3
00:00:05,270 --> 00:00:09,250
斐波纳契数列 (Fibonacci Series) 斐波纳契数是数学中

4
00:00:09,250 --> 00:00:12,440
最有趣的事情之一 一旦你对它们有所了解

5
00:00:12,440 --> 00:00:15,170
你会在所有的地方看到它们 无论是在自然

6
00:00:15,170 --> 00:00:18,040
还是在人类设计中 这个名字来源于Leonardo da Pisa

7
00:00:18,040 --> 00:00:21,090
他也被称为 Fibonacci 早在

8
00:00:21,090 --> 00:00:25,372
1202年 他出版了一本名为 Liber Abaci 的书 (书名为拉丁语)

9
00:00:25,372 --> 00:00:27,812
Abaci 与算盘 (abacus) 的词根相同 表示一种计算

10
00:00:27,812 --> 00:00:32,020
工具 书名被译为《计算之书》(Book of Calculus)

11
00:00:32,020 --> 00:00:35,530
本书将印度数学引入西方

12
00:00:35,530 --> 00:00:37,740
特别介绍了我们现在知道的阿拉伯

13
00:00:37,740 --> 00:00:41,360
数字 这取代了当时广泛使用的罗马

14
00:00:41,360 --> 00:00:44,130
数字体系 Fibonacci 在书中所做的一部分是

15
00:00:44,130 --> 00:00:45,975
展示 使用十进制

16
00:00:45,975 --> 00:00:50,490
中的数字进行计算有多容易

17
00:00:50,490 --> 00:00:53,270
其中的数字表示其值 书中部分内容

18
00:00:53,270 --> 00:00:55,810
是介绍一些问题 并说明如何

19
00:00:55,810 --> 00:00:59,420
使用计算解决这些问题 这个后来被称为

20
00:00:59,420 --> 00:01:02,650
斐波纳契数列的问题 就是书中的问题之一

21
00:01:02,650 --> 00:01:05,430
他提出的问题是这样的 一开始

22
00:01:05,430 --> 00:01:08,290
我们有 1 对兔子 它需要

23
00:01:08,290 --> 00:01:11,810
1 个月时间来生出后代 每个月

24
00:01:11,810 --> 00:01:15,300
1 对成熟的兔子会生出 1 对新的兔子

25
00:01:15,300 --> 00:01:18,730
因此在月份 1 我们有 1 对

26
00:01:18,730 --> 00:01:22,290
兔子 在月份 2 我们有一开始

27
00:01:22,290 --> 00:01:24,780
的那对兔子 而且现在我们有了 1 对新的

28
00:01:24,780 --> 00:01:28,280
我们有 2 对兔子 现在在月份 3

29
00:01:28,280 --> 00:01:31,850
兔宝宝还没有准备好来生产

30
00:01:31,850 --> 00:01:34,240
兔子需要 1 个月的时间来达到成熟期

31
00:01:34,240 --> 00:01:37,530
但是这 2 只每个月将产生新的后代 所以

32
00:01:37,530 --> 00:01:40,460
我们又有 1 对新的兔宝宝 还有

33
00:01:40,460 --> 00:01:42,590
在月份 2 出生的 2 只兔子 并且他们已经经历了

34
00:01:42,590 --> 00:01:47,160
一个月的成长期 所以现在 它们是成熟的兔子

35
00:01:47,160 --> 00:01:48,930
那么 我们在月份 3 结束时有 3 对兔子

36
00:01:48,930 --> 00:01:51,650
所以在月份 4 我们仍然拥有我们已有的

37
00:01:51,650 --> 00:01:55,360
3 对兔子 兔子在这个模型中不会死亡

38
00:01:55,360 --> 00:01:58,320
这 2 对是成熟的 现在这 2 对会

39
00:01:58,320 --> 00:02:02,180
生出新的兔子 因此 我们有 2 对新的

40
00:02:02,180 --> 00:02:05,850
兔宝宝 这对出生在月份 3 的兔宝宝

41
00:02:05,850 --> 00:02:08,610
现在都是成熟的 所以现在我们有

42
00:02:08,610 --> 00:02:12,630
3 对成熟兔和 2 对兔宝宝

43
00:02:12,630 --> 00:02:15,830
所以我们一共有 5 对兔子 然后

44
00:02:15,830 --> 00:02:18,370
继续这样下去 模型假设兔子不会死去

45
00:02:18,370 --> 00:02:21,820
那么每个月每对成熟兔

46
00:02:21,820 --> 00:02:24,690
生出 1 对新的兔宝宝 每对兔子

47
00:02:24,690 --> 00:02:27,060
从初生到成熟需要 1 个月的时间

48
00:02:27,060 --> 00:02:30,880
所以 在月份 5 这 3 对成熟兔

49
00:02:30,880 --> 00:02:36,010
都会生产新的后代、新的后代

50
00:02:36,010 --> 00:02:39,230
新的后代 3 对新的后代 而且这 2 对

51
00:02:39,230 --> 00:02:40,910
有 1 个月大了 它们出生在月份 4

52
00:02:40,910 --> 00:02:44,020
现在变得成熟 所以 这不是一个很

53
00:02:44,020 --> 00:02:47,870
精确的模型来表现兔子的繁衍 这对我们很好

54
00:02:47,870 --> 00:02:49,770
如果它是一个精确的模型 那么

55
00:02:49,770 --> 00:02:52,270
只需要几年 兔子就会控制

56
00:02:52,270 --> 00:02:56,570
整个地球 但是 这是一个有趣的数学模型

57
00:02:56,570 --> 00:03:00,280
而且这种模型的结构 我们可以以

58
00:03:00,280 --> 00:03:03,570
一个更正式的方式来书写 那么 兔子的数量是

59
00:03:03,570 --> 00:03:06,080
我们上个月拥有的兔子数量

60
00:03:06,080 --> 00:03:08,750
由于这些兔子不想死 所以在月份 5

61
00:03:08,750 --> 00:03:10,710
我们有 5 对上个月获得的

62
00:03:10,710 --> 00:03:14,770
兔子 加上所有的成熟兔 也就是

63
00:03:14,770 --> 00:03:18,320
我们 2 个月前拥有的兔子

64
00:03:18,320 --> 00:03:22,980
这个数量为 3 如果我们是在月份 5

65
00:03:22,980 --> 00:03:25,470
那么我们有 3 对新兔子 加上

66
00:03:25,470 --> 00:03:27,730
我们在上个月拥有的 5 然后

67
00:03:27,730 --> 00:03:30,546
继续下去 那么我们在月份 6 了 我们

68
00:03:30,546 --> 00:03:33,580
将有 8 对 我们在月份 5 结束时

69
00:03:33,580 --> 00:03:37,805
拥有的兔子 再加上 5 对成熟兔

70
00:03:37,805 --> 00:03:40,800
1、2、3、4、5 每对都将再生产 所以我们会

71
00:03:40,800 --> 00:03:43,570
有 5 对新的 这会给我们 13

72
00:03:43,570 --> 00:03:48,780
对兔子 那么 这就是斐波纳契模型

73
00:03:48,780 --> 00:03:50,790
然后问题是 你能否计算出 在

74
00:03:50,790 --> 00:03:54,052
月份 n 结束时 给定任意数 n 将会有多少只

75
00:03:54,052 --> 00:03:56,790
兔子？我们在数学上定义这个的方式与

76
00:03:56,790 --> 00:04:00,850
斐波纳契提出的问题 略有不同 这是

77
00:04:00,850 --> 00:04:05,550
因为在现代数学中 我们通常喜欢使我们的数列

78
00:04:05,550 --> 00:04:08,680
从 0 开始 如果我们考虑兔子模型 那么

79
00:04:08,680 --> 00:04:11,400
从 0 只兔子开始没有什么意义

80
00:04:11,400 --> 00:04:13,760
但是如果我们考虑它作为一种更通用的数列 它是需要的

81
00:04:13,760 --> 00:04:15,570
因此它在数学上定义的方式是

82
00:04:15,570 --> 00:04:19,769
我们说 fibonacci(0) 被定义为 0

83
00:04:19,769 --> 00:04:24,610
fibonacci(1) 被定义为 1

84
00:04:24,610 --> 00:04:27,080
这些就是我们的两个基本情况 所以这

85
00:04:27,080 --> 00:04:30,170
与我们见过的其他递归定义不同

86
00:04:30,170 --> 00:04:32,850
它有 2 个基本情况 之前我们的所有

87
00:04:32,850 --> 00:04:35,600
定义都只有一个基本情况 那么接下来

88
00:04:35,600 --> 00:04:38,920
我们可以定义每个其他数字的斐波纳契数 但首先

89
00:04:38,920 --> 00:04:43,500
我们会从这些基本情况开始 所以 fibonacci(n)

90
00:04:44,900 --> 00:04:49,740
其中 n 为比 1 大的整数 是我们

91
00:04:49,740 --> 00:04:54,340
前一个月拥有的所有兔子 这个 fibonacci(n-1)

92
00:04:54,340 --> 00:04:57,040
加上所有的新宝宝 而新宝宝的数量

93
00:04:57,040 --> 00:04:59,290
是 2 个月之前我们拥有的兔子数量

94
00:04:59,290 --> 00:05:02,080
这些都是成熟的兔子 这被加到

95
00:05:02,080 --> 00:05:04,390
我们上个月拥有的兔子数量上

96
00:05:04,390 --> 00:05:08,520
所以这就是我们如何定义斐波纳契数 这定义了每个斐波纳契数

97
00:05:08,520 --> 00:05:12,330
用 2 个基本情况和 1 个递归情况

98
00:05:16,190 --> 00:05:19,540
所以 你的目标是定义一个名为 fibonacci 的过程

99
00:05:19,540 --> 00:05:22,190
这需要一个自然数作为输入 所以 数字

100
00:05:22,190 --> 00:05:25,470
从 0 开始 以及所有比 0 大的整数 然后输出

101
00:05:25,470 --> 00:05:30,530
该数字的斐波那契数 使用这个递归定义来定义

