1
00:00:00,000 --> 00:00:05,000
这个问题是 在 Udacity 我们试图将视频上传到 YouTube

2
00:00:05,000 --> 00:00:08,000
但我们遇到了困难

3
00:00:08,000 --> 00:00:11,000
因为真的花了很长的时间 上传这些好几千百万比特 (GB) 的数据

4
00:00:11,000 --> 00:00:14,000
要解决这个问题 我们需要做什么？

5
00:00:14,000 --> 00:00:16,000
首先让我们考虑延迟时间

6
00:00:16,000 --> 00:00:22,000
延迟时间是从 Udacity 到 YouTube 花费的时间

7
00:00:22,000 --> 00:00:27,000
那么 如果我们考虑实际状况：把视频分解成较小的数据块

8
00:00:27,000 --> 00:00:31,000
传送 1 小数据块所花费的时间量

9
00:00:31,000 --> 00:00:34,000
可能是以 100 毫秒 (milliseconds) 为单位

10
00:00:34,000 --> 00:00:38,000
即使我们把时间降低到 1 毫秒

11
00:00:38,000 --> 00:00:41,000
一次传送 1 小数据块 考虑 3 GB 的数据

12
00:00:41,000 --> 00:00:44,000
也几乎是一样慢

13
00:00:44,000 --> 00:00:47,000
我们可能节省了 99 毫秒

14
00:00:47,000 --> 00:00:51,000
在整个计划中 真的不需要解决这个问题

15
00:00:51,000 --> 00:00:53,000
下一步让我们考虑带宽

16
00:00:53,000 --> 00:00:56,000
如果取而代之 我们增加连接的带宽

17
00:00:56,000 --> 00:01:01,000
这使得我们从起点到目的地 能够送出较大的数据块

18
00:01:01,000 --> 00:01:03,000
我们真正地解决了问题

19
00:01:03,000 --> 00:01:06,000
在这里 与我们要传送数据的大小相比 延迟不是大问题

20
00:01:06,000 --> 00:01:09,000
传送较大的数据块 比测量单一数据块从 Udacity 到 YouTube 的时间

21
00:01:09,000 --> 00:01:13,000
更为重要

22
00:01:13,000 --> 00:01:16,000
因此答案是 我们要增加带宽

23
00:01:16,000 --> 00:01:20,000
最后 2 个选项是根据视频的内容：

24
00:01:20,000 --> 00:01:25,000
我们有的颜色数量 以及视频本身有多少壞頭髮

25
00:01:25,000 --> 00:01:29,000
虽然这些可能稍微影响了数据大小 但是并不会造成太大的差异

26
00:01:29,000 --> 00:01:32,000
而真正地 解决这个问题的最佳方法是增加带宽

