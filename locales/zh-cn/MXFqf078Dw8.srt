1
00:00:00,000 --> 00:00:02,000
这是解决这一问题的一种方法：

2
00:00:02,000 --> 00:00:04,000
我们将定义一个过程

3
00:00:04,000 --> 00:00:06,000
is_friend

4
00:00:06,000 --> 00:00:08,000
输入一个字符串

5
00:00:08,000 --> 00:00:11,000
也就是一个人的名字

6
00:00:11,000 --> 00:00:13,000
我们将用一个 if 语句来进行判断

7
00:00:13,000 --> 00:00:18,000
我们将判断这个名字的首字母是否等于一个大写的 D

8
00:00:18,000 --> 00:00:20,400
如果是 就说明这个人是朋友

9
00:00:20,400 --> 00:00:22,000
我们就能返回"真"

10
00:00:22,000 --> 00:00:25,000
如果不是 则他们不是朋友

11
00:00:25,000 --> 00:00:28,000
我们不需要 else —— 我们可以直接返回"假"

12
00:00:28,000 --> 00:00:30,354
但是我会用一个 else 让程序更对称一些

13
00:00:30,354 --> 00:00:35,000
如果这个名字不是以 D 开头 我们就可以返回"假"

14
00:00:35,000 --> 00:00:37,000
现在让我们来试一下

15
00:00:37,000 --> 00:00:42,000
就用之前的例子 ('Diane') 我们得到 "is_friend" 为真

16
00:00:42,000 --> 00:00:47,000
当我们尝试用 ('Fred') 我们得到输出为假

17
00:00:47,000 --> 00:00:49,000
这看起来正是我们想要的

18
00:00:49,000 --> 00:00:52,000
事实上 我们并不需要这么多的代码

19
00:00:52,000 --> 00:00:55,000
我们没有理由必须使用 if 表达式

20
00:00:55,000 --> 00:00:58,000
由于判断本身就是一个布尔运算

21
00:00:58,000 --> 00:01:00,000
我们可以就直接返回

22
00:01:00,000 --> 00:01:03,000
我们可以返回这一比较的结果

23
00:01:03,000 --> 00:01:05,000
我们在做相等判断

24
00:01:05,000 --> 00:01:09,000
来看名字下标为零时对应的首字母是否是 D

25
00:01:09,000 --> 00:01:12,000
意思是一样的 但简单得多

26
00:01:12,000 --> 00:01:14,200
有时候人们觉得写这样的表达式不自然

27
00:01:14,200 --> 00:01:16,000
当你需要条件判断的时候

28
00:01:16,000 --> 00:01:19,000
你觉得你需要一个 if 语句——但其实这不是必须的

29
00:01:19,000 --> 00:01:22,000
在这种情况下 只写一行要简单多了

30
00:01:22,000 --> 00:01:26,000
我们可以直接返回相等判断的结果
