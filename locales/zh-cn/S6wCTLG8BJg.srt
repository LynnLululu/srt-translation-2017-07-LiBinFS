1
00:00:00,690 --> 00:00:02,250
这里是解决问题的一种方式 我们

2
00:00:02,250 --> 00:00:04,770
要定义一个过程 fibonacci ( 斐波那契数 ) 我们会调用

3
00:00:04,770 --> 00:00:07,160
输入 n 现在 我们需要编写

4
00:00:07,160 --> 00:00:09,930
代码 如果我们还记得我们的定义 那么

5
00:00:09,930 --> 00:00:14,550
我们说过 0 的斐波那契数 被定义为 0

6
00:00:14,550 --> 00:00:20,640
1 的斐波那契数被定义为 1 然后更大数字的斐波那契数

7
00:00:20,640 --> 00:00:25,780
被定义为 n-1 的斐波那契数 加上 n-2 的

8
00:00:25,780 --> 00:00:28,570
斐波那契数 所以 如果你还记得定义 我们

9
00:00:28,570 --> 00:00:31,520
有两个基本情况需要考虑 如果

10
00:00:31,520 --> 00:00:33,980
输入值是 0 或输入值是 1

11
00:00:33,980 --> 00:00:36,910
我们需要做一些特殊处理 所以我们可以

12
00:00:36,910 --> 00:00:40,560
把它们写成单独的 if 语句 因此 如果 n

13
00:00:40,560 --> 00:00:43,965
等于 0 我们要做的是返回 0

14
00:00:43,965 --> 00:00:50,980
如果 n 等于 1 我们要做的是返回 1 否则我们要

15
00:00:50,980 --> 00:00:56,182
做的是该定义的递归部分 因此 我们要

16
00:00:56,182 --> 00:01:00,835
返回 fibonacci(n-1) 的结果 然后我们想要

17
00:01:00,835 --> 00:01:04,879
把它加到 fibonacci(n-2) 上 这样我们就可以

18
00:01:04,879 --> 00:01:08,280
将这个简化一点 让我们在 Python 解释器试一下

