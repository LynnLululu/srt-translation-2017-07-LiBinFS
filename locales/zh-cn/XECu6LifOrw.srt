1
00:00:00,000 --> 00:00:04,000
Stormborn 有一个问题

2
00:00:04,000 --> 00:00:08,000
"在注册前 我唯一写编程语言的经验

3
00:00:08,000 --> 00:00:10,000
是一点点的 JavaScript 

4
00:00:10,000 --> 00:00:16,000
在 JavaScript 中有大量的括号和分号 来标示语句的结束 

5
00:00:16,000 --> 00:00:19,000
但在 Python 中似乎没有这些 

6
00:00:19,000 --> 00:00:23,000
我只是想知道 Python 如何知道你正在定义程序

7
00:00:23,000 --> 00:00:27,000
而这些程序应该与程序的其他部分一起进行 

8
00:00:27,000 --> 00:00:30,000
是不是跟缩进有关？"

9
00:00:30,000 --> 00:00:33,000
谢谢你的问题 Stormborn

10
00:00:33,000 --> 00:00:36,000
我们注意到在 Python 中 其实空格是有意义的

11
00:00:36,000 --> 00:00:39,000
与许多语言不同

12
00:00:39,000 --> 00:00:43,000
对于曾经用过其他编程语言的人都知道 如 Java 或 JavaScript 或 C

13
00:00:43,000 --> 00:00:48,000
你们必须有很多的语法来告诉编译器

14
00:00:48,000 --> 00:00:50,000
语句在何处结束 以及程序块开始与结束的位置

15
00:00:50,000 --> 00:00:53,000
你有分号、大括号 还有其他的符号

16
00:00:53,000 --> 00:00:58,000
在程序中 真的有些方法 只是用来帮助编译器知道事情的开始和结束

17
00:00:58,000 --> 00:01:01,000
在 Python 空格就是这个作用

18
00:01:01,000 --> 00:01:03,000
换行是重要的 缩进是重要的

19
00:01:03,000 --> 00:01:08,000
Python 解释器知道 程序块是根据缩进的位置判断何处结束

20
00:01:08,000 --> 00:01:11,000
这是非常好的 它可以很容易地阅读你的代码

21
00:01:11,000 --> 00:01:14,000
你不必担心要添加括号和符号

22
00:01:14,000 --> 00:01:16,000
如果你看別人的代码 或是看你自己的代码

23
00:01:16,000 --> 00:01:20,000
代码的结构 会说明代码的意义

24
00:01:20,000 --> 00:01:24,000
因为它必须与 Python 解释器翻译的程序块

25
00:01:24,000 --> 00:01:26,000
具有相同的缩进结构

26
00:01:26,000 --> 00:01:28,000
有时候这会导致问题 这就是为什么许多语言

27
00:01:28,000 --> 00:01:31,000
不重视空格

28
00:01:31,000 --> 00:01:36,000
如果你要复制代码到不同的编辑器 或者你更改一些内容而影响了空格

29
00:01:36,000 --> 00:01:38,000
在 Python 中 就会改变代码的意义

30
00:01:38,000 --> 00:01:41,000
你必须要小心 不要改变缩进

31
00:01:41,000 --> 00:01:44,000
不要改变换行之类的东西

32
00:01:44,000 --> 00:01:47,000
因为在 Python 中 实际上可能改变代码的含义

33
00:01:47,000 --> 00:01:50,000
对解释器以及对读代码的人而言

34
00:01:50,000 --> 00:01:53,000
代码的结构 是一个能作明确解释的便利方式

35
00:01:53,000 --> 00:01:57,000
它省去了额外的语法来做到这一点 像是大括号或分号

