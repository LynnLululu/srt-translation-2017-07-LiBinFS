1
00:00:00,310 --> 00:00:02,630
对网页进行排名与

2
00:00:02,630 --> 00:00:05,670
衡量人们的受欢迎程度相似

3
00:00:05,670 --> 00:00:08,820
我们要衡量的是网页上的链接

4
00:00:08,820 --> 00:00:12,420
而不是好友关系

5
00:00:12,420 --> 00:00:16,230
当某个网页有一个指向其他网页的链接时

6
00:00:16,230 --> 00:00:19,030
则表明这个其他网页很有可能比较热门

7
00:00:19,030 --> 00:00:23,560
就像某个人是好友一样

8
00:00:23,560 --> 00:00:25,550
表明某人的好友更有可能比较受欢迎

9
00:00:25,550 --> 00:00:28,920
网页排名的目标是

10
00:00:28,920 --> 00:00:33,030
根据链接到相关网页的其他网页

11
00:00:33,030 --> 00:00:35,810
衡量该网页的热门程度

12
00:00:35,810 --> 00:00:38,150
但是我们遇到了和受欢迎程度一样的问题

13
00:00:38,150 --> 00:00:42,940
并非所有的链接都一样 某个非常重要的网页发出的链接

14
00:00:42,940 --> 00:00:45,710
比不重要的网页发出的链接占比要大很多

15
00:00:45,710 --> 00:00:47,950
假设《纽约时报》上有个链接指向你的网页

16
00:00:47,950 --> 00:00:50,950
同时假设你妈妈设置了一个网页

17
00:00:50,950 --> 00:00:52,690
并在上面放置了指向你的网页的链接

18
00:00:52,690 --> 00:00:55,160
那么纽约时报的链接肯定更具分量

19
00:00:55,160 --> 00:00:58,460
除非你妈妈是 Lady Gaga 这种情况下 她给出的链接更具分量

20
00:00:58,460 --> 00:01:01,630
另一种思考方法是我们要模拟

21
00:01:01,630 --> 00:01:05,080
一个随机网络服务器

22
00:01:05,080 --> 00:01:08,170
该服务器具有一些已知的网页

23
00:01:08,170 --> 00:01:11,720
这些网页具有指向其他网页的链接

24
00:01:11,720 --> 00:01:16,170
某些网页可能具有很多链接 某些可能只有一个链接

25
00:01:16,170 --> 00:01:20,010
某些可能没有链接

26
00:01:20,010 --> 00:01:23,140
一种思考方式是尝试模拟一个随机网络服务器

27
00:01:23,140 --> 00:01:26,720
该服务器开始了解一些网页

28
00:01:26,720 --> 00:01:30,060
它随机选择一个网页 假设选择了这个网页

29
00:01:30,060 --> 00:01:32,360
然后转到该网页上 随机选择一个链接

30
00:01:32,360 --> 00:01:34,950
点击该链接 糟糕 这个起始网页不太好

31
00:01:34,950 --> 00:01:37,700
它实际上没有向外的链接

32
00:01:37,700 --> 00:01:41,590
然后选择另一个随机网页 假设选择了这个

33
00:01:41,590 --> 00:01:43,870
点击该链接

34
00:01:43,870 --> 00:01:47,270
再次转到没有链接的网页 假设选择了更好的起始点

35
00:01:47,270 --> 00:01:50,150
假设随机选择了这个网页

36
00:01:50,150 --> 00:01:53,460
现在可以点击两个链接 随机选择一个

37
00:01:53,460 --> 00:01:56,510
转到新的网页

38
00:01:56,510 --> 00:01:59,640
随机选择该网页上的链接 这种情况下 只有一个链接

39
00:01:59,640 --> 00:02:01,300
在这种情况下 我们似乎遇到了问题

40
00:02:01,300 --> 00:02:06,400
因为所有的起始网页最终都转到这个网页

41
00:02:06,400 --> 00:02:09,050
它没有向外的链接

42
00:02:09,050 --> 00:02:11,700
稍后我们将思考如何解决该问题

43
00:02:11,700 --> 00:02:15,180
现在我们可以认为随机网络服务器所做的是选择随机网页

44
00:02:15,180 --> 00:02:18,570
点击链接 我们想要衡量某个网页的受欢迎程度

45
00:02:18,570 --> 00:02:22,690
即从这些随机网页抵达给定网页的概率

46
00:02:22,690 --> 00:02:26,170
如果不断执行这一流程

47
00:02:26,170 --> 00:02:28,440
算出抵达每个网页的次数

48
00:02:28,440 --> 00:02:32,290
就可以得出该网页的受欢迎程度

49
00:02:32,290 --> 00:02:36,020
和 popularity 函数很相似

50
00:02:36,020 --> 00:02:38,150
我们将定义一个网页排名函数

51
00:02:38,150 --> 00:02:41,930
和定义 popularity 函数一样

52
00:02:41,930 --> 00:02:44,060
有两个输入

53
00:02:44,060 --> 00:02:48,010
一个是时间步长 一个是网页 用 URL 表示

54
00:02:48,010 --> 00:02:51,980
rank() 的输出是一个数字

55
00:02:51,980 --> 00:02:55,030
但是我们将定义时间步长 0

56
00:02:55,030 --> 00:02:57,370
这是我们的基础条件

57
00:02:57,370 --> 00:03:00,680
所有排名值为 1

58
00:03:00,680 --> 00:03:03,090
稍后做更改 我们先假设所有排名

59
00:03:03,090 --> 00:03:04,780
值都是 1

60
00:03:04,780 --> 00:03:08,400
就像受欢迎程度得分一样

61
00:03:08,400 --> 00:03:15,230
然后将定义任何给定 URL 在时间步长 t 时的排名值

62
00:03:15,230 --> 00:03:19,200
就像定义受欢迎程度得分一样

63
00:03:19,200 --> 00:03:22,420
等于与该网页是好友的网页排名之和

64
00:03:22,420 --> 00:03:24,200
网页与其他网页是好友是指

65
00:03:24,200 --> 00:03:26,660
具有指向该网页的链接

66
00:03:26,660 --> 00:03:28,940
也就是存在的链接到该 URL 的所有网页

67
00:03:28,940 --> 00:03:33,150
即它的好友

68
00:03:34,710 --> 00:03:36,670
我们可以查看每个网页

69
00:03:36,670 --> 00:03:40,390
称之为 inlinks 而不是 friends

70
00:03:40,390 --> 00:03:43,170
我们将查看这些网页 并算出时间步长 t-1 时

71
00:03:43,170 --> 00:03:47,460
这些网页的排名之和

72
00:03:47,460 --> 00:03:51,820
这就是网页的第一个受欢迎程度模型

73
00:03:51,820 --> 00:03:55,380
这和人的受欢迎程度模型完全一样

74
00:03:55,380 --> 00:03:57,460
但是效果不太好

75
00:03:57,460 --> 00:04:00,980
原因之一是某些网页

76
00:04:00,980 --> 00:04:03,530
可能有很多的链接

77
00:04:03,530 --> 00:04:07,090
如果某个网页有很多的链接 则它的链接的每个值

78
00:04:07,090 --> 00:04:09,090
都应该减小 不应该和只有一个链接

79
00:04:09,090 --> 00:04:12,510
指向该 URL 的网页值相同

80
00:04:12,510 --> 00:04:14,850
或许这和好友的受欢迎程度差不多

81
00:04:14,850 --> 00:04:19,670
如果某人有很多好友 则每个好友的重要性都更低

82
00:04:19,670 --> 00:04:21,459
但是如果某人只有一小部分好友

83
00:04:21,459 --> 00:04:23,850
则有很多时间陪每位好友

84
00:04:23,850 --> 00:04:26,330
我们就这样表示网页受欢迎程度

85
00:04:26,330 --> 00:04:29,090
我们不希望给每个链接设定相同的得分

86
00:04:29,090 --> 00:04:32,860
为此 我们将除以向外链接的数量

87
00:04:32,860 --> 00:04:37,700
如果某个网页有很多向外链接

88
00:04:37,700 --> 00:04:39,880
则它链接到的每个网页的值会降低

89
00:04:39,880 --> 00:04:42,700
如果某个网页是一个长长的链接列表

90
00:04:42,700 --> 00:04:45,710
则对排名没太多影响

91
00:04:45,710 --> 00:04:48,430
如果某个网页只有少数几个向外链接 那么重要性更高

92
00:04:48,430 --> 00:04:52,290
我们要做的是将这个除以 p 的向外链接数量

93
00:04:52,290 --> 00:04:55,550
即每个 p 网页 对吧？

94
00:04:55,550 --> 00:04:59,329
这些将是经历 URL 的内部链接时 p 的值

95
00:04:59,329 --> 00:05:02,779
我们将对上一时间步长的排名求和

96
00:05:02,779 --> 00:05:05,840
并除以向外链接的数量