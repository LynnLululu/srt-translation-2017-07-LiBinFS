1
00:00:00,410 --> 00:00:04,460
所以答案是第三个选项

2
00:00:04,460 --> 00:00:07,500
这些数据结构变得越来越复杂 很难阅读

3
00:00:07,500 --> 00:00:10,960
我们需要考虑我们需要什么组件来表示散列表

4
00:00:10,960 --> 00:00:14,100
我们需要的主要组件是表示桶的方式

5
00:00:14,100 --> 00:00:17,688
所以这里是我们的哈希表的图片

6
00:00:17,688 --> 00:00:21,130
我们想要的是一个列表　

7
00:00:21,130 --> 00:00:22,690
这将是列表中的每个元素是一个桶的列表

8
00:00:22,690 --> 00:00:26,090
什么是桶 它本身是一个列表

9
00:00:26,090 --> 00:00:28,350
其中列表中的每个元素是一个键和一个值

10
00:00:28,350 --> 00:00:31,630
在我们的例子中 键是单词

11
00:00:31,630 --> 00:00:34,240
值是一个URL列表

12
00:00:34,240 --> 00:00:37,170
因此最接近的对应结构是

13
00:00:37,170 --> 00:00:41,010
这里我们有的一个列表 每个内部的列表和一个桶相对应

14
00:00:41,010 --> 00:00:44,550
然后在桶内 一个词

15
00:00:44,550 --> 00:00:48,346
和一个 URL 列表是一个条目

16
00:00:48,346 --> 00:00:51,910
这对应于在我们以前的索引中的条目

17
00:00:51,910 --> 00:00:53,360
但是现在因为我们想要使它成为哈希表

18
00:00:53,360 --> 00:00:55,680
我们将它们收集在桶中

19
00:00:55,680 --> 00:00:59,030
因此这些条目的列表和

20
00:00:59,030 --> 00:01:01,320
外部列表中的每个元素对应于一个桶
