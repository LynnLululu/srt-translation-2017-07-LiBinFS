1
00:00:00,000 --> 00:00:03,000
我认为有3个主题 

2
00:00:03,000 --> 00:00:05,000
真正渗透我们反复看到的课程 

3
00:00:05,000 --> 00:00:08,000
但到目前为止 我还没有明显提到 

4
00:00:08,000 --> 00:00:12,000
这些主题不仅仅在贯穿这一课程 

5
00:00:12,000 --> 00:00:14,000
但整个计算机科学中也是普及的 

6
00:00:14,000 --> 00:00:16,000
第一个是抽象 

7
00:00:16,000 --> 00:00:19,000
抽象就是隐藏详细信息 

8
00:00:19,000 --> 00:00:23,000
抽象的意思是进行抽象化 这样你可以有一样

9
00:00:23,000 --> 00:00:26,000
通过许多不同方式使用过的东西 你可以使用它 

10
00:00:26,000 --> 00:00:29,000
不一定要理解它所有的详细信息 

11
00:00:29,000 --> 00:00:33,000
我们在这一课程中看到了大量此类抽象的例子 

12
00:00:33,000 --> 00:00:36,000
最重要的一个是程序抽象 

13
00:00:36,000 --> 00:00:39,000
我们可以编写一个过程 用它来做很多不同的事情 

14
00:00:39,000 --> 00:00:42,000
取决于输入的内容 和我们使用该过程的时候 

15
00:00:42,000 --> 00:00:46,000
我们不需要知道具体会执行什么样的指令序列 

16
00:00:46,000 --> 00:00:48,000
我们知道过程的用途 

17
00:00:48,000 --> 00:00:50,000
第二个主题是通用性 

18
00:00:50,000 --> 00:00:52,000
我们之前在课程中讨论过

19
00:00:52,000 --> 00:00:55,000
计算机如何是通用机器 

20
00:00:55,000 --> 00:00:59,000
我想向你展示我在绘图方面有了多大长进 

21
00:00:59,000 --> 00:01:05,000
如果你认不出我在第一单元画的烤面包机 

22
00:01:05,000 --> 00:01:07,000
我希望你可以看到我现在画得要好得多了 

23
00:01:07,000 --> 00:01:11,000
这是一个烤面包机 烤面包机和计算机截然不同 

24
00:01:11,000 --> 00:01:13,000
计算机是一种通用的机器 

25
00:01:13,000 --> 00:01:17,000
我们见过许多例子 证明一台计算机是如何通用的——

26
00:01:17,000 --> 00:01:22,000
我们只需要几个简单的构造就可以定义每个可能的程序 

27
00:01:22,000 --> 00:01:25,000
我们看到了 如果我们有一种做决定的方式

28
00:01:25,000 --> 00:01:29,000
我们看到了在 Python 中 if 可以做到这一点

29
00:01:29,000 --> 00:01:32,000
如果我们有一种方法跟踪事情——

30
00:01:32,000 --> 00:01:37,000
在 Python 中 我们可以使用变量和数据

31
00:01:37,000 --> 00:01:40,000
如果我们有一种方式继续——

32
00:01:40,000 --> 00:01:45,000
我们首先看到使用 while——用 while 循环 我们可以让事情继续 

33
00:01:45,000 --> 00:01:47,000
只要我们想的话 

34
00:01:47,000 --> 00:01:49,000
但事实上 我们甚至不需要 while 

35
00:01:49,000 --> 00:01:54,000
我们可以通过过程就可以了 这就是我们所看到的

36
00:01:54,000 --> 00:01:56,000
第6单元的递归定义 

37
00:01:56,000 --> 00:02:00,000
一旦我们有了这3个东西 我们可以编写任何计算机程序 

38
00:02:00,000 --> 00:02:04,000
因此 计算机的力量比烤面包机大得多 

39
00:02:04,000 --> 00:02:09,000
最后一个主题 也就是我想总结的第三个主题 

40
00:02:09,000 --> 00:02:11,000
我们已经提到过了 

41
00:02:11,000 --> 00:02:13,000
就是递归定义 

42
00:02:13,000 --> 00:02:16,000
在第6单元中 我们清楚介绍过了 

43
00:02:16,000 --> 00:02:19,000
但是你在那之前也见过很多次 

44
00:02:19,000 --> 00:02:22,000
第一次你看见递归定义实际上是在第一单元 

45
00:02:22,000 --> 00:02:25,000
我们看到了这些规则 规定我们能生成一个表达式

46
00:02:25,000 --> 00:02:29,000
通过采取另一个表达式 使用加号运算符 

47
00:02:29,000 --> 00:02:31,000
并将它与另一个表达式结合起来 

48
00:02:31,000 --> 00:02:34,000
这本身对于递归定义还不够 

49
00:02:34,000 --> 00:02:36,000
我们还需要一个递归的基础

50
00:02:36,000 --> 00:02:40,000
我们看到了递归的基础 比如我们可以有一个表达式是一个数字 

51
00:02:40,000 --> 00:02:46,000
这里的主要意思就是有了非常简单的规则 我们可以无限地定义很多东西 

52
00:02:46,000 --> 00:02:49,000
通过使用规则 定义非常复杂的东西 

53
00:02:49,000 --> 99:59:59,000
用自身的缩小版进行定义 

