1
00:00:00,000 --> 00:00:03,000
答案可能会有些出乎意料

2
00:00:03,000 --> 00:00:06,000
答案是3 以下为解答过程 第一句代码建立列表

3
00:00:06,000 --> 00:00:10,000
元素为1 2 变量 p 指向该列表

4
00:00:10,000 --> 00:00:14,000
第二句代码建立的列表包含元素3 4

5
00:00:14,000 --> 00:00:16,000
变量 q 指向该列表

6
00:00:16,000 --> 00:00:20,000
第三句代码将一个新元素添加在 p 中

7
00:00:20,000 --> 00:00:22,000
这个新元素是包含2个元素的列表

8
00:00:22,000 --> 00:00:26,000
但实际发生的情况却不是在 p 中新增2个元素

9
00:00:26,000 --> 00:00:28,000
而是只新增1个元素

10
00:00:28,000 --> 00:00:30,000
而这个元素本身是一个列表

11
00:00:30,000 --> 00:00:35,000
所以看起来 p 中有了一个新元素

12
00:00:35,000 --> 00:00:40,000
而这个新元素的值其实是 q 指向的列表

13
00:00:40,000 --> 00:00:43,000
所以 p 的长度是3

14
00:00:43,000 --> 00:00:51,000
在 Python 解释器中运行一下

15
00:00:51,000 --> 00:00:53,000
我们可以看到创建的列表

16
00:00:53,000 --> 00:00:59,000
可以看出列表的长度是3

17
00:00:59,000 --> 00:01:02,000
那如果我们将 q 位置1的元素值换成5

18
00:01:02,000 --> 00:01:07,000
会发生什么情况呢

19
00:01:07,000 --> 00:01:10,000
p 的值是否会改变

20
00:01:10,000 --> 00:01:13,000
答案是肯定的 如果大家还记得刚才的图

21
00:01:13,000 --> 00:01:15,000
这个答案完全在意料之中

22
00:01:15,000 --> 00:01:19,000
我们建立的对象 p 的第三个元素

23
00:01:19,000 --> 00:01:24,000
其实是包含元素3和4的对象

24
00:01:24,000 --> 00:01:27,000
即 q 指向的列表

25
00:01:27,000 --> 00:01:31,000
我们改变 q 位置1元素的值时

26
00:01:31,000 --> 00:01:34,000
p 的值也同时改变

