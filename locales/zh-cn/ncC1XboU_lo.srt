1
00:00:00,290 --> 00:00:02,740
希望你现在已经明白如何使用字典

2
00:00:02,740 --> 00:00:05,370
接下来 我们接着讨论之前的搜索引擎代码

3
00:00:05,370 --> 00:00:09,190
使用字典更新程序

4
00:00:09,190 --> 00:00:12,020
这会给我们带来很大的好处

5
00:00:12,020 --> 00:00:14,990
我们可以在恒定时间执行一次 lookup 函数

6
00:00:14,990 --> 00:00:18,380
只要增加桶和关键字的数量 所以

7
00:00:18,380 --> 00:00:21,770
在开始之前 回答问题

8
00:00:21,770 --> 00:00:25,510
下列哪个已定义函数中

9
00:00:25,510 --> 00:00:28,540
需要使用字典代替列表?

10
00:00:28,540 --> 00:00:31,250
这里有几个选项 都是我们已经定义好的函数

11
00:00:31,250 --> 00:00:35,180
我们有 get_all_links 

12
00:00:35,180 --> 00:00:37,950
get_all_links 函数能够扫描整个网页

13
00:00:37,950 --> 00:00:41,786
并且返回网页中包含的所有链接 我们有函数 crawl_web

14
00:00:41,786 --> 00:00:45,080
我们有 crawl_web 函数 这个从一个种子网页开始

15
00:00:45,080 --> 00:00:46,770
之后 访问所有能够被找到的网页

16
00:00:46,770 --> 00:00:50,690
收集每个网页中的链接和关键字

17
00:00:50,690 --> 00:00:52,410
将这些信息添加到 index 中

18
00:00:52,410 --> 00:00:56,960
我们有 add_page_to_index 函数 它能提取网页信息 

19
00:00:56,960 --> 00:00:59,600
它被 crawl_web 调用 找到一个新的网页后

20
00:00:59,600 --> 00:01:02,530
将这个网页加入到 index 中

21
00:01:02,530 --> 00:01:04,800
也就是提取出网页中的所有文字 将这些文字加入到 index 中

22
00:01:04,800 --> 00:01:08,930
我们有 add_to_index 函数 它使用 index、keyword 和

23
00:01:08,930 --> 00:01:11,670
keyword 所在的URL作为参数

24
00:01:11,670 --> 00:01:15,460
并且将 keyword 的位置加入 index 我们还有 lookup 函数

25
00:01:15,460 --> 00:01:18,850
这个函数使用一个 keyword 作为参数并且返回一个列表

26
00:01:18,850 --> 00:01:21,850
列表中包含所有与这个 keyword 相关的 URL 为了回答这个问题 你或许需要看一下代码

27
00:01:21,850 --> 00:01:25,270
你可以在这个网页上找到它 思考一下

28
00:01:25,270 --> 00:01:27,380
这些函数中哪一个需要

29
00:01:27,380 --> 00:01:29,880
使用字典代替列表
