1
00:00:00,000 --> 00:00:04,550
要向任何应用添加小部件 你需要创建三样东西

2
00:00:04,550 --> 00:00:10,250
首先是一个 WidgetProvider 类 扩展 AppWidgetProvider 类

3
00:00:10,250 --> 00:00:11,670
接下来 你还需要创建

4
00:00:11,670 --> 00:00:17,055
一个 WidgetProviderInfo 这是描述小部件元数据的一个 XML 文件

5
00:00:17,055 --> 00:00:20,030
包括最小宽度和高度等信息

6
00:00:20,030 --> 00:00:22,400
以及一些其他重要属性 

7
00:00:22,400 --> 00:00:24,990
此文件会进入 XML 文件夹

8
00:00:24,990 --> 00:00:28,380
最后 你还需要创建一个 XML 布局文件 用于描述

9
00:00:28,380 --> 00:00:34,400
小部件的视图 类似于所有其他布局文件 但有一些限制

10
00:00:34,400 --> 00:00:37,390
此文件将进入 layout 文件夹

11
00:00:37,390 --> 00:00:42,360
那么在内部 我们使用广播消息与应用通信

12
00:00:42,360 --> 00:00:45,380
这会使小部件成为广播接收者

13
00:00:45,380 --> 00:00:47,670
要让它发挥作用 你需要使用 <receiver> 标签

14
00:00:47,670 --> 00:00:51,345
在清单文件中注册 WidgetProvider

15
00:00:51,345 --> 00:00:53,569
看起来工作量挺大的 是吧？

16
00:00:53,569 --> 00:00:56,130
不过幸运的是借助 Android Studio

17
00:00:56,130 --> 00:00:59,230
只需几步点击操作我们便能创建好所有这些文件

18
00:00:59,230 --> 00:01:02,385
来看看代码中怎么做

19
00:01:02,385 --> 00:01:04,660
首先 再次打开我们的初学者代码

20
00:01:04,660 --> 00:01:08,070
然后右击左侧这里的 app 模块

21
00:01:08,070 --> 00:01:13,365
转至“新建”-“小部件"-"应用小部件” 给它起一个名称

22
00:01:13,365 --> 00:01:16,365
我们用 PlantWidgetProvider

23
00:01:16,365 --> 00:01:18,704
暂时保留所有默认设置

24
00:01:18,704 --> 00:01:23,970
所有这些设置将进入 AppWidgetProviderInfo XML 文件中

25
00:01:23,970 --> 00:01:27,230
如果稍后我们需要更改 就前往这里更改

26
00:01:27,230 --> 00:01:29,425
我们不需要配置屏幕

27
00:01:29,425 --> 00:01:32,670
因为在这个例子中我们不希望小部件是可自定义的

28
00:01:32,670 --> 00:01:35,535
那么就将这个选项留白

29
00:01:35,535 --> 00:01:36,700
现在点击“完成”

30
00:01:36,700 --> 00:01:41,365
你会注意到 Android Studio 为我们创建了一堆新文件

31
00:01:41,365 --> 00:01:43,770
第一个是带有小部件名称的 Java 文件

32
00:01:43,770 --> 00:01:47,385
它扩展了 AppWidgetProvider 类

33
00:01:47,385 --> 00:01:50,140
它还在下面这里为你预填了一些方法

34
00:01:50,140 --> 00:01:52,735
我们一会儿再回来看它们

35
00:01:52,735 --> 00:02:00,015
创建的另一个文件是 plant_widget_provider_xml

36
00:02:00,015 --> 00:02:02,580
这个文件包含对该小部件的说明

37
00:02:02,580 --> 00:02:05,175
包括可调整大小的选项

38
00:02:05,175 --> 00:02:07,440
最小宽度和高度等信息

39
00:02:07,440 --> 00:02:12,529
另一个非常重要的选项是这个：updatePeriodMillis

40
00:02:12,529 --> 00:02:17,820
它指定了该小部件进行更新的毫秒时间间隔

41
00:02:17,820 --> 00:02:20,279
现在允许的最短间隔是 30 分钟

42
00:02:20,279 --> 00:02:23,005
这是为了防止耗电

43
00:02:23,005 --> 00:02:25,950
这在我们的花园用例中还不错 因为我们的植物

44
00:02:25,950 --> 00:02:29,320
生长需要几天时间 几小时浇一次水便可以了

45
00:02:29,320 --> 00:02:32,305
因此 30 分钟的更新间隔足够好

46
00:02:32,305 --> 00:02:36,149
接下来 注意 <receiver> 标签被自动添加到了清单文件

47
00:02:36,149 --> 00:02:41,327
并且它指向了正确的小部件类和 provider XML

48
00:02:41,327 --> 00:02:46,060
最后 布局 XML 预填了文本视图

49
00:02:46,060 --> 00:02:48,890
这就好了 非常简单

50
00:02:48,890 --> 00:02:50,294
现在 我们有了一个正常运作的小部件

51
00:02:50,294 --> 00:02:52,560
但是如果你现在尝试它 可能会

52
00:02:52,560 --> 00:02:54,990
觉得它与我们的植物应用没什么联系

53
00:02:54,990 --> 00:02:58,115
这是因为我们还未开始自定义它

54
00:02:58,115 --> 00:03:00,000
接下来我们就来进行自定义