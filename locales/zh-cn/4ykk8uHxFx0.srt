1
00:00:00,000 --> 00:00:03,000
我希望你们对于理解列表已经开始感到自信

2
00:00:03,000 --> 00:00:06,000
理解我们对列表能够进行的运算 

3
00:00:06,000 --> 00:00:11,000
以及理解如何使用 for 循环和 while 循环遍历列表元素

4
00:00:11,000 --> 00:00:15,000
对于这个小练习 我们将尝试比之前较为困难的内容 

5
00:00:15,000 --> 00:00:19,000
你的目标是定义一个方法 该方法名为 find_element 并且含有两个输入参数 

6
00:00:19,000 --> 00:00:21,000
第一个输入是一个列表 

7
00:00:21,000 --> 00:00:24,000
它可以是任何元素类型的列表 

8
00:00:24,000 --> 00:00:27,000
而第二个输入是一个任何类型的值 

9
00:00:27,000 --> 00:00:30,000
这个方法输出输入列表中一个元素的索引 

10
00:00:30,000 --> 00:00:34,000
这个元素是输入列表中第一个与作为第二输入被传入的值相匹配的元素 

11
00:00:34,000 --> 00:00:37,000
在定义一个过程时 你应考虑到的一点就是

12
00:00:37,000 --> 00:00:41,000
是否存在任何你不清楚该做什么的特殊情况 

13
00:00:41,000 --> 00:00:43,000
在这里 我目前陈述的问题

14
00:00:43,000 --> 00:00:47,000
并没有解释如果输入列表不包含

15
00:00:47,000 --> 00:00:51,000
任何与作为第二输入被传入的值匹配的元素 我们应当做什么 

16
00:00:51,000 --> 00:00:54,000
我们要做修改来让这更清楚 

17
00:00:54,000 --> 00:00:57,000
我们要让它像字符串的 find 方法那样工作 

18
00:00:57,000 --> 00:01:01,000
所以 如果这样的元素不存在 我们就返回-1 

19
00:01:01,000 --> 00:01:04,000
这里有几个例子 

20
00:01:04,000 --> 00:01:08,000
如果你调用 find_element 将列表1 2 3 作为列表传入 

21
00:01:08,000 --> 00:01:12,000
并传入值使其与数字3相匹配 

22
00:01:12,000 --> 00:01:16,000
我们在这里找到匹配 在位置2 

23
00:01:16,000 --> 00:01:19,000
所以输出应为2 

24
00:01:19,000 --> 00:01:25,000
如果我们将包含字符串 alpha 和 beta 的列表作为列表传入 

25
00:01:25,000 --> 00:01:29,000
并且作为元素传入来查找字符串 gamma 

26
00:01:29,000 --> 00:01:34,000
列表中并没有这样的元素 所以输出应为-1 

27
00:01:34,000 --> 00:01:36,000
通过我们目前所学的知识 

28
00:01:36,000 --> 00:01:39,000
你可以有不同的方法来定义 find_element 

29
00:01:39,000 --> 99:59:59,000
你试试能否找到一种这样工作的定义方法 

