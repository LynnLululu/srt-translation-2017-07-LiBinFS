1
00:00:00,200 --> 00:00:02,800
所以这里是我们想做的 我们想遍历

2
00:00:02,800 --> 00:00:06,770
图中的所有页面 那么 这次我们称

3
00:00:06,770 --> 00:00:09,370
它们为节点 (node) 我们不能再次使用 page 因为我们已经

4
00:00:09,370 --> 00:00:11,370
在这里使用了 page 我们将遍历该图中的

5
00:00:11,370 --> 00:00:16,059
每一页 起名为 node 然后对于每个 node

6
00:00:16,059 --> 00:00:19,600
现在我们需要做的是 检查该页面是否

7
00:00:19,600 --> 00:00:22,720
链接到这一个 所以我们在 graph[node] 查找

8
00:00:22,720 --> 00:00:25,080
这将使我们获取该节点链接到的所有

9
00:00:25,080 --> 00:00:28,130
页面的列表 如果 page 在该列表中

10
00:00:28,130 --> 00:00:31,970
这意味着该 node 链接到 page

11
00:00:31,970 --> 00:00:35,490
这意味着我们应该将 newrank 加上

12
00:00:35,490 --> 00:00:38,189
这个 node 的排名 这就是我们

13
00:00:38,189 --> 00:00:40,834
要做的 我们要对 newrank 做累加

14
00:00:40,834 --> 00:00:43,480
新的值将是在

15
00:00:43,480 --> 00:00:46,380
newrank 的旧值上做累加 我们要

16
00:00:46,380 --> 00:00:50,130
乘以 d 这是我们的阻尼因子 然后

17
00:00:50,130 --> 00:00:53,850
我们将在这里使用的值 是 node 的页面排名

18
00:00:53,850 --> 00:00:57,190
记住 它是链接到我们关心的节点

19
00:00:57,190 --> 00:00:59,062
的页面 所以我们要获取该页面的排名

20
00:00:59,062 --> 00:01:02,100
我们想要做的 就是将其除以

21
00:01:02,100 --> 00:01:06,450
该页面的超链接数量 这很重要

22
00:01:06,450 --> 00:01:10,000
这意味着每个页面都有很多链接 

23
00:01:10,000 --> 00:01:12,140
每个链接的值都较少 我们需要将其除以

24
00:01:12,140 --> 00:01:16,050
该列表的长度 这是我们通过查看

25
00:01:16,050 --> 00:01:19,000
graph[node] 得到的 所以 这就是我们需要的 

26
00:01:19,000 --> 00:01:22,220
我们要更新 newrank 我们遍历图中

27
00:01:22,220 --> 00:01:24,070
所有节点 我们查找链接到这一个

28
00:01:24,070 --> 00:01:26,460
的所有节点 我们使用公式来

29
00:01:26,460 --> 00:01:29,180
更新我们的排名 最后我们

30
00:01:29,180 --> 00:01:33,190
返回 ranks 那么让我们在 Python 解释器中尝试

31
00:01:33,190 --> 00:01:36,180
我们有我们刚刚写的 compute_ranks 代码 我们要

32
00:01:36,180 --> 00:01:41,110
调用 crawl_web 传入示例网站 将输出赋值

33
00:01:41,110 --> 00:01:42,890
给变量 index 和 graph

34
00:01:42,890 --> 00:01:46,726
然后我们将 graph 传入 compute_ranks

35
00:01:46,726 --> 00:01:49,270
将结果储存在变量 ranks 中 我们可以

36
00:01:49,270 --> 00:01:52,820
打印出结果 ranks 来看页面排名

37
00:01:52,820 --> 00:01:55,970
所以 这是我们得到的 我们得到

38
00:01:55,970 --> 00:01:59,960
一个字典 对我们抓取的每个网址 我们有

39
00:01:59,960 --> 00:02:03,134
一个条目 其中前面一项是 URL 后面是

40
00:02:03,134 --> 00:02:06,150
每个页面对应排名的值 所以让我们来看看

41
00:02:06,150 --> 00:02:09,130
我们得到的排名是否有意义

42
00:02:09,130 --> 00:02:12,950
回到我们的示例网站 我们有

43
00:02:12,950 --> 00:02:15,680
拥有两个进入链接的 Kathleen 页面

44
00:02:15,680 --> 00:02:18,900
我们的 Nickel 页面 有三个链接可以

45
00:02:18,900 --> 00:02:21,890
进入 如果我们只是简单的链接计数 

46
00:02:21,890 --> 00:02:25,160
那么 Nickel 应该比 Kathleen 更受欢迎 如果

47
00:02:25,160 --> 00:02:26,950
我们看一下页面排名

48
00:02:26,950 --> 00:02:31,718
Nickel 的页面排名是 0.097 Kathleen 的页面排名

49
00:02:31,718 --> 00:02:35,360
是 0.11 所以实际排名较高的页面

50
00:02:35,360 --> 00:02:38,380
是只有两个进入链接的页面 

51
00:02:38,380 --> 00:02:40,700
其原因是 尽管它只有

52
00:02:40,700 --> 00:02:43,890
两个进入链接 但是这两个链接都

53
00:02:43,890 --> 00:02:47,480
来自于受欢迎的页面 这个是来自

54
00:02:47,480 --> 00:02:50,050
索引页面 而这个是来自于

55
00:02:50,050 --> 00:02:54,200
很受欢迎的 Nickel 页面 所以这就是为什么

56
00:02:54,200 --> 00:02:56,690
Kathleen 的页面排名实际上高于 Nickel

