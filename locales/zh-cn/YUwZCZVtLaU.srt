1
00:00:00,250 --> 00:00:04,810
答案是 “No” 即使有这些限制中的

2
00:00:04,810 --> 00:00:07,860
任一限制 依然不能很好地做出定义

3
00:00:07,860 --> 00:00:11,400
我们来看看所有限制条件

4
00:00:11,400 --> 00:00:14,170
第一个是 如果所有人都和 Alice 是好友

5
00:00:14,170 --> 00:00:15,810
只有当他们都没有任何其他好友时 才能成立

6
00:00:15,810 --> 00:00:18,870
假设这是 Alice

7
00:00:18,870 --> 00:00:22,860
这是 Bob 和 Charlie 他们都是 Alice 的好友

8
00:00:22,860 --> 00:00:25,320
但是 Bob 也是 Charlie 的好友

9
00:00:25,320 --> 00:00:29,590
Charlie 是 Bob 的好友 这表明 要算出 Bob 的受欢迎程度

10
00:00:29,590 --> 00:00:32,830
我们需要知道 Charlie 的受欢迎程度

11
00:00:32,830 --> 00:00:35,000
要算出 Charlie 的受欢迎程度

12
00:00:35,000 --> 00:00:37,870
我们需要知道 Alice 和 Bob 的受欢迎程度

13
00:00:37,870 --> 00:00:40,390
我们始终也得不到结果

14
00:00:40,390 --> 00:00:44,200
我们将在 Bob 和 Charlie 之间不断循环

15
00:00:44,200 --> 00:00:46,810
第二个选项是仅当任何人都不是 Alice 的好友

16
00:00:46,810 --> 00:00:50,850
如果任何人都不是 Alice 的好友 则需要删掉这两个箭头

17
00:00:50,850 --> 00:00:53,730
并不能解决我们的问题

18
00:00:53,730 --> 00:00:57,340
我们依然无法算出 Bob 和 Charlie 的受欢迎程度

19
00:00:57,340 --> 00:01:00,370
第三个选项是仅当图中有一个好友路径

20
00:01:00,370 --> 00:01:04,635
最终会抵达 Alice 添加这个箭头即可满足这一特性

21
00:01:04,635 --> 00:01:07,490
但是依然无法解答我们的问题

22
00:01:07,490 --> 00:01:09,930
我们无法算出 Charlie 的受欢迎程度

23
00:01:09,930 --> 00:01:12,250
因为我们需要知道 Bob 的受欢迎程度

24
00:01:12,250 --> 00:01:15,200
这样的话 我们就需要知道 Charlie 的受欢迎程度 又进入这一死循环了

25
00:01:16,420 --> 00:01:18,950
最后一个选项似乎正确

26
00:01:18,950 --> 00:01:21,250
条件是图中没有循环

27
00:01:21,250 --> 00:01:24,590
我们可以删掉这个箭头 这样就没循环了

28
00:01:24,590 --> 00:01:28,680
这样的话 是不是就满足条件了？

29
00:01:28,680 --> 00:01:31,050
我们可以通过算出 Charlie 的受欢迎程度

30
00:01:31,050 --> 00:01:34,200
来算出 Bob 的受欢迎程度 Charlie 的受欢迎程度取决于

31
00:01:34,200 --> 00:01:38,060
Alice 的受欢迎程度 但是如果 Bob 还有其他好友

32
00:01:38,060 --> 00:01:41,390
假设 Bob 是 Diana 的好友

33
00:01:41,390 --> 00:01:43,540
那么要算出 Diana 的受欢迎程度

34
00:01:43,540 --> 00:01:46,990
我们需要知道 Bob 的受欢迎程度

35
00:01:46,990 --> 00:01:50,000
存在问题的情况是 假设还有 Diana 和 Edgar

36
00:01:50,000 --> 00:01:53,030
Diana 是 Edgar 的好友

37
00:01:53,030 --> 00:01:57,328
要算出 Diana 的受欢迎程度 我们需要知道 Edgar 的受欢迎程度

38
00:01:57,328 --> 00:01:59,180
虽然没有死循环 但是也没有答案

39
00:01:59,180 --> 00:02:02,305
要算出 Edgar 的受欢迎程度 我们需要看看

40
00:02:02,305 --> 00:02:05,980
Edgar 的好友 对于 Python 代码来说 实际上有可能可行

41
00:02:05,980 --> 00:02:10,550
对吧？因为如果我们定义没有好友时的受欢迎程度

42
00:02:10,550 --> 00:02:12,960
如果 friends(p) 为空 当我们遍历这一循环时

43
00:02:12,960 --> 00:02:16,510
score 将为 0 所以如果答案是没有循环

44
00:02:16,510 --> 00:02:21,330
至少这种情况可能正确

45
00:02:21,330 --> 00:02:24,650
但是对于数学定义来说 则不够严谨

46
00:02:24,650 --> 00:02:26,950
我们依然需要知道 Edgar 的受欢迎程度

47
00:02:26,950 --> 00:02:30,050
这种情况的定义就相当于

48
00:02:30,050 --> 00:02:32,900
如果没有好友 那么受欢迎程度的得分将是 0

49
00:02:32,900 --> 00:02:36,480
Python 代码可以表示这种情况

50
00:02:36,480 --> 00:02:41,080
但是这并不能很好地定义受欢迎程度

51
00:02:41,080 --> 00:02:44,270
我们不能专断地说 假设 Alice 的受欢迎程度得分是 1

52
00:02:44,270 --> 00:02:46,580
Alice 根本没法提高她自己的受欢迎程度

53
00:02:46,580 --> 00:02:48,280
这样对 Alice 来说不太公平

54
00:02:48,280 --> 00:02:50,550
也无法提供有意义的得分