1
00:00:00,000 --> 00:00:03,000
这个问题的正确答案是

2
00:00:03,000 --> 00:00:06,000
除了第二个选项 其他都对

3
00:00:06,000 --> 00:00:08,000
让我们看看为什么

4
00:00:08,000 --> 00:00:10,000
我们选一个例子 字符串 s

5
00:00:10,000 --> 00:00:12,000
比方说 s 是 'duck'

6
00:00:12,000 --> 00:00:16,000
第一个例子中 我们连接 a 和 s

7
00:00:16,000 --> 00:00:20,000
所以选择 1 和之后的字符 会得到 'duck'

8
00:00:20,000 --> 00:00:23,000
这是我们原来的字符串 s

9
00:00:23,000 --> 00:00:26,000
这个正确 对于第二个选项 让我们插入 'duck'

10
00:00:26,000 --> 00:00:29,000
第一个字符 'duck' 的位置 0 的字符是 d

11
00:00:29,000 --> 00:00:32,000
将字符串剩下的部分连接起来

12
00:00:32,000 --> 00:00:39,000
得到了一开始的字符串 'duck'

13
00:00:39,000 --> 00:00:42,000
因此 这似乎是正确的 但我们必须记住的是

14
00:00:42,000 --> 00:00:45,000
s 可以是空字符串

15
00:00:45,000 --> 00:00:47,000
如果我们尝试取出位置 0 的字符

16
00:00:47,000 --> 00:00:51,000
我们会得到错误 因为位置 0 没有字符

17
00:00:51,000 --> 00:00:53,000
因为在 s 中没有字符

18
00:00:53,000 --> 00:00:56,000
继续 如果我们试图加一个空字符串到 s

19
00:00:56,000 --> 00:01:01,000
我们得到的值和原始值完全相同 因为我们没有加入任何东西

20
00:01:01,000 --> 00:01:03,000
最后的选项 它似乎并不是那么明显

21
00:01:03,000 --> 00:01:05,000
对于空字符串 它是正确的

22
00:01:05,000 --> 00:01:10,000
这似乎没那么好懂 从位置 0 起选择每一个字符

23
00:01:10,000 --> 00:01:13,000
不会造成错误 因为没有字符

24
00:01:13,000 --> 00:01:16,000
我们必须记住 次序列运算符

25
00:01:16,000 --> 00:01:18,000
不会导致错误

26
00:01:18,000 --> 00:01:22,000
为什么会是这样呢？因为…
