1
00:00:00,180 --> 00:00:02,260
现在 我们想做的是提取网址

2
00:00:02,260 --> 00:00:05,650
我们发现了这个位置 那是

3
00:00:05,650 --> 00:00:09,340
start_link的值 现在我们的目标是提取

4
00:00:09,340 --> 00:00:13,160
这个 URL 它是在start_link之后的

5
00:00:13,160 --> 00:00:15,790
第一个双引号后开始

6
00:00:15,790 --> 00:00:19,510
在第二个双引号结束 所以本单元最后

7
00:00:19,510 --> 00:00:22,480
一个测验 你的目标是写出所有

8
00:00:22,480 --> 00:00:25,390
代码使得我们最终找到该网址

9
00:00:25,390 --> 00:00:28,620
这是我们到目前为止最难的测验 这将

10
00:00:28,620 --> 00:00:31,040
涉及到 考虑变量 考虑如何

11
00:00:31,040 --> 00:00:33,800
用不同的方式使用 find 方法 还有

12
00:00:33,800 --> 00:00:36,920
自己写出几行代码 仔细想一想

13
00:00:36,920 --> 00:00:38,480
怎样做到 但我觉得

14
00:00:38,480 --> 00:00:42,012
如果你理解了目前所学的内容 就可以自己做到

15
00:00:42,012 --> 00:00:45,179
[声音空白]

16
00:00:45,179 --> 00:00:48,203
具体来说 测验在这里 你的目标是

17
00:00:48,203 --> 00:00:51,519
编写 Python 代码 赋值给变量url

18
00:00:51,519 --> 00:00:54,849
这些都是小写字母 一个字符串 它是

19
00:00:54,849 --> 00:00:57,513
页面上发现的第一个链接标签中的 url 的值

20
00:00:57,513 --> 00:01:01,060
所以 你应该假设我们有

21
00:01:01,060 --> 00:01:04,120
已经初始化为网页内容的变量 page

22
00:01:04,120 --> 00:01:07,700
而在你的浏览器 这将被初始化

23
00:01:07,700 --> 00:01:10,320
一个示例网页的内容 从之前的

24
00:01:10,320 --> 00:01:13,510
测验我们已经有了变量 start_link 的值

25
00:01:13,510 --> 00:01:16,150
start_link 是在 page 上调用 find 方法的返回值

26
00:01:16,150 --> 00:01:20,800
即在 page 字符串中查找 <a href=

27
00:01:20,800 --> 00:01:24,210
你的目标是要完成这个代码

28
00:01:24,210 --> 00:01:30,280
所以这段代码的最后 url 的值是页面上的第一个链接

29
00:01:30,280 --> 00:01:32,690
你打印输出 url 的值 你要完成代码

30
00:01:32,690 --> 00:01:35,780
使代码正确运行 按照我们提供的示例

31
00:01:35,780 --> 00:01:42,040
你应该得到的结果是 http://udacity.com

32
00:01:42,040 --> 00:01:47,610
它是在 Udacity 网页上找到的网址 这是非常困难的测验

33
00:01:47,610 --> 00:01:51,340
有很多的步骤 仔细想想吧 它运用了几乎所有

34
00:01:51,340 --> 00:01:53,370
你在本单元学到的东西

35
00:01:53,370 --> 00:01:54,900
你不得不思考如何使用 find 方法

36
00:01:54,900 --> 00:01:58,470
有可能传入数字 以及字符串

37
00:01:58,470 --> 00:02:01,170
以及变量来跟踪进行

38
00:02:01,170 --> 00:02:04,040
要查找到结果 你还需要思考如何

39
00:02:04,040 --> 00:02:07,920
使用字符串索引操作 选择字符串的一个子序列

